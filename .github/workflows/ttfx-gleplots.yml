name: GLEPlot

on:
  push:
    branches:
      - ttfx
      - ttfx-gle

env:
  INDEX: "test/abc_min/index.md"
  SETUP: 'using Pkg; Pkg.add(url="https://github.com/tlienart/GLEPlot.jl", rev="dev");'
  BUILD: ""
  PPATH: "Xranklin.jl"
  TARGD: "ttfx/gleplot"
  SITED: "test/abc_min"
  START: $(date +%s)

jobs:
  gleplot:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      # # =======================================================================
      # # -- deps --
      # - name: Install LaTeX ðŸŒ´
      #   run: |
      #     sudo apt-get update -qq
      #     sudo apt install -y pdf2svg texlive-latex-base texlive-binaries texlive-pictures texlive-latex-extra texlive-luatex

      - name: Install GLE
        run: |
            curl -L https://sourceforge.net/projects/glx/files/gle4%20%28Current%20Active%20Version%29/4.3.1/gle-4.3.1-Linux.zip/download > gle.zip
            unzip gle.zip

      # -- modify index --
      - name: Set index.md ðŸ“–
        run: |
              echo "# TTFX GLEPlot"                 > ${{ env.INDEX }}
              echo "\`\`\`!"                       >> ${{ env.INDEX }}
              echo "using GLEPlot"                 >> ${{ env.INDEX }}
              echo "ENV[\"GLE\"] = \`gle-4.3.1-Linux/bin/gle\`" >> ${{ env.INDEX }}
              echo "x = range(0, pi, length=500)"  >> ${{ env.INDEX }}
              echo "y = @. sin(exp(x)) * sinc(x)"  >> ${{ env.INDEX }}
              echo "plot(x, y)"                    >> ${{ env.INDEX }}
              echo "gcf()"                         >> ${{ env.INDEX }}
              echo "\`\`\`"                        >> ${{ env.INDEX }}
              echo "# TIME"                                  >> ${{ env.INDEX }}
              echo "\`\`\`!"                                 >> ${{ env.INDEX }}
              echo "using Dates"                             >> ${{ env.INDEX }}
              echo "delta  = datetime2unix(now())"           >> ${{ env.INDEX }}
              echo "delta -= ${{ env.START }}"               >> ${{ env.INDEX }}
              echo "delta  = round(delta/60, digits=2)"      >> ${{ env.INDEX }}
              echo "ps(s) = joinpath(Utils.path(:site), s)"  >> ${{ env.INDEX }}
              echo "write(ps(\"timer\"), delta)"             >> ${{ env.INDEX }}
              echo "println(\"Time taken: \$(delta)min.\")"  >> ${{ env.INDEX }}
              echo "\`\`\`"                                  >> ${{ env.INDEX }}
              cat ${{ env.INDEX }}

      # =======================================================================

      - name: Install Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: 1.7

      - name: Building website ðŸš§
        run: ${{ env.BUILD }} julia -e '
                ${{ env.SETUP }};
                Pkg.add(
                  url="https://github.com/tlienart/Xranklin.jl",
                  rev="main"
                  );
                using Xranklin;
                build("${{ env.SITED }}";
                      clear=true,
                      prefix=joinpath(
                        "${{ env.PPATH }}",
                        "${{ env.TARGD }}"
                        )
                      );'

      # Deployment
      - name: No Jekyll
        run: touch ${{ env.SITED }}/__site/.nojekyll
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          BRANCH: gh-ttfx
          FOLDER: ${{ env.SITED }}/__site
          TARGET-FOLDER: "${{ env.TARGD }}"
